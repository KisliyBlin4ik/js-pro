{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\TMS__React\\\\hw\\\\js-pro\\\\my-app\\\\src\\\\components\\\\Post\\\\Post.tsx\";\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [arrPost, setArrPost] = useState([]);\nconst fetchPost = async () => {\n  const response = await fetch('https://studapi.teachmeskills.by/blog/posts/?limit=10');\n  const data = await response.json();\n  const results = data.results;\n  const posts = results.slice(0, 10);\n  setArrPost(posts);\n};\nconst Post = ({\n  title\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPost,\n      className: \"btnPost\",\n      children: \"Load Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__items\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__BIG\",\n          children: arrPost.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: item.id < 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__item post__big\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this), item.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 42\n              }, this) : null]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this) : ''\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__MID\",\n          children: arrPost.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: item.id > 1 && item.id < 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__item post__mid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), item.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 46\n              }, this) : null]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this) : ''\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__right\",\n        children: arrPost.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: item.id > 5 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__item post__small\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), item.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 42\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this) : ''\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","arrPost","setArrPost","fetchPost","response","fetch","data","json","results","posts","slice","Post","title","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","date","text","_c","$RefreshReg$"],"sources":["C:/Javascript/TMS__React/hw/js-pro/my-app/src/components/Post/Post.tsx"],"sourcesContent":["import React, { useState, FC } from 'react'\r\nimport './style.css'\r\n\r\ninterface IPost {\r\n    title: string;\r\n}\r\n\r\ninterface IPosts {\r\n    id: number;\r\n    text: string;\r\n    date: string;\r\n    title: string;\r\n}\r\n\r\nconst [arrPost, setArrPost] = useState<IPosts[]>([]);\r\n\r\nconst fetchPost = async () => {\r\n  const response = await fetch('https://studapi.teachmeskills.by/blog/posts/?limit=10');\r\n  const data = await response.json();\r\n  const results = data.results;\r\n  const posts = results.slice(0, 10);\r\n  setArrPost(posts);\r\n}\r\n\r\nconst Post: FC<IPost> = ({title}) => {\r\n\r\n    return (\r\n        <>\r\n            <button onClick={fetchPost} className='btnPost'>Load Posts</button>\r\n            <div className='post__items'>\r\n                <div className='post__left'>\r\n                    <div className='post__BIG'>\r\n                {arrPost.map((item) => (\r\n                <>\r\n                    {item.id < 2 ? \r\n                        <div key={item.id} className='post__item post__big'>\r\n                            <div>{item.date}</div>\r\n                            <div>{item.title}</div>\r\n                            {item.text ? <div>{item.text}</div> : null}\r\n                        </div> \r\n                        : ''\r\n                    }\r\n                </>\r\n            ))}\r\n                    </div>\r\n                    <div className='post__MID'>\r\n                        {arrPost.map((item) => (\r\n                            <>\r\n                            {item.id > 1 && item.id < 6 ? \r\n                            <div key={item.id} className='post__item post__mid'>\r\n                                <div>{item.date}</div>\r\n                                <div>{item.title}</div>\r\n                                {item.text ? <div>{item.text}</div> : null}\r\n                            </div> \r\n                            : ''\r\n                            }\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            <div className='post__right'>\r\n                {arrPost.map((item) => (\r\n                <>\r\n                    {item.id > 5 ? \r\n                        <div key={item.id} className='post__item post__small'>\r\n                            <div>{item.date}</div>\r\n                            <div>{item.title}</div>\r\n                            {item.text ? <div>{item.text}</div> : null}\r\n                        </div> \r\n                        : ''}\r\n                </>\r\n            ))}\r\n            </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n      );\r\n}\r\n\r\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}