{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript\\\\TMS__React\\\\hw\\\\js-pro\\\\my-app\\\\src\\\\components\\\\Input\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  type,\n  placeholder,\n  value,\n  label,\n  onChange\n}) => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (counter % 5 === 0) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [counter]);\n  console.log(inputRef);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Counter \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setCounter(counter + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: type,\n        placeholder: placeholder,\n        value: value,\n        onChange: e => onChange(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Input, \"mhZgnb+7ttwd+0SxcidqVQol050=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","type","placeholder","value","label","onChange","_s","counter","setCounter","inputRef","_inputRef$current","current","focus","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Javascript/TMS__React/hw/js-pro/my-app/src/components/Input/Input.tsx"],"sourcesContent":["import React, { FC, useState, useRef, createRef, useEffect } from 'react'\r\nimport './style.css'\r\n\r\ninterface IInput {\r\n    type: 'password' | 'text';\r\n    placeholder: string;\r\n    value: string;\r\n    label: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nconst Input: FC<IInput> = ({type, placeholder, value, label, onChange}) => {\r\n    const [counter, setCounter] = useState(0);\r\n    const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (counter%5 === 0) {\r\n            inputRef.current?.focus()\r\n        }\r\n    }, [counter])\r\n    console.log(inputRef);\r\n    \r\n  return (\r\n    <>\r\n    <div> Counter <span>{counter}</span></div>\r\n    <button type='button' onClick={() => setCounter(counter + 1   )}>Increment</button>\r\n    <div className='formInput'>\r\n        <label>{label}</label>\r\n        <input ref={inputRef} type={type} placeholder={placeholder} value={value} onChange={(e) => onChange(e.currentTarget.value)}/>\r\n    </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Input"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,EAAEC,MAAM,EAAaC,SAAS,QAAQ,OAAO;AACzE,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUpB,MAAMC,KAAiB,GAAGA,CAAC;EAACC,IAAI;EAAEC,WAAW;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMgB,QAAQ,GAAGf,MAAM,CAA0B,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAIY,OAAO,GAAC,CAAC,KAAK,CAAC,EAAE;MAAA,IAAAG,iBAAA;MACjB,CAAAA,iBAAA,GAAAD,QAAQ,CAACE,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EACbM,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAEvB,oBACEZ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,GAAK,WAAS,eAAAlB,OAAA;QAAAkB,QAAA,EAAOR;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CtB,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAACmB,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACD,OAAO,GAAG,CAAI,CAAE;MAAAQ,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnFtB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACtBlB,OAAA;QAAAkB,QAAA,EAAQX;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtBtB,OAAA;QAAOyB,GAAG,EAAEb,QAAS;QAACR,IAAI,EAAEA,IAAK;QAACC,WAAW,EAAEA,WAAY;QAACC,KAAK,EAAEA,KAAM;QAACE,QAAQ,EAAGkB,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,aAAa,CAACrB,KAAK;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5H,CAAC;EAAA,eACJ,CAAC;AAGP,CAAC;AAAAb,EAAA,CAtBKN,KAAiB;AAAAyB,EAAA,GAAjBzB,KAAiB;AAwBvB,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}